<?xml version="1.0" encoding="UTF-8"?>

<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--    可以用location值为参数配置文件的位置  location="classpath:dubbo.properties" -->
    <context:property-placeholder/>

    <!-- dubbo name 最好要更改  -->
    <dubbo:application name="${spring.application.name}" logger="slf4j"/>

    <dubbo:protocol id="dubbo" name="dubbo" port="20880"></dubbo:protocol>

    <dubbo:registry id="dubboRegistry" timeout="5000" address="zookeeper://127.0.0.1:2181"
                    client="curator"></dubbo:registry>
    <!--    <dubbo:registry address="zookeeper://${zookeeper.address:127.0.0.1}:2181"/>-->


    <!--xml的格式配置dubbo提供的RPC服务 建议使用注解的方式配置 -->
    <!--    bean 可以直接用@Service注解注入，不用手动配置-->
    <bean id="demoRpcService" class="org.chance.dubbo.provider.service.DemoRpcServiceImpl"/>
    <dubbo:service interface="org.chance.micro.rpc.api.dubbo.DemoRpcService" ref="demoRpcService" timeout="3000"
                   retries="3" group="" version="1.0" loadbalance="random" actives="5"/>

</beans>