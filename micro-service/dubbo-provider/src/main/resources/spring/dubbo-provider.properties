## dubbo springboot 配置
# Dubbo Protocol 通信协议
dubbo.protocol.id=dubbo
dubbo.protocol.name=dubbo
dubbo.protocol.port=20880
# 序列化的方式： kryo、fst 都比默认的性能高，测试发现 对于自定义RuntimeException不能正常捕获，
# 网上说出参入参添加属性也会导致序列化失败
#dubbo.protocol.serialization=kryo
#dubbo.protocol.serialization=fst


## Dubbo Registry

# Base packages to scan Dubbo Component: @org.apache.dubbo.config.annotation.Service
# 扫描dubbo服务(@Service.. @Reference..)
#dubbo.scan.base-packages=org.chance.dubbo.provider.service

# Dubbo Application
## The default value of dubbo.application.name is ${spring.application.name}
dubbo.application.name=${spring.application.name}

# 注册中心
dubbo.registry.id = dubboRegistry
dubbo.registry.timeout=5000
# dubbo.registry.address=N/A
dubbo.registry.address=zookeeper://127.0.0.1:2181
# Dubbo 支持 zkclient 和 curator 两种 Zookeeper 客户端实现：在2.7.x的版本中已经移除了zkclient的实现,如果要使用zkclient客户端,需要自行拓展
dubbo.registry.client=curator

# 元数据地址
dubbo.metadata-report.address=zookeeper://127.0.0.1:2181

## dubbo qos配置
## 通过Telnet方式访问QoS
# telnet localhost 22222
## 通过HTTP方式访问QOS
# curl -i http://localhost:22222/online?service=org.apache.dubbo.demo.provider.DemoService
dubbo.application.qos-enable=true
dubbo.application.qos-port=22222
dubbo.application.qos-accept-foreign-ip=true

# Dubbo可以自动加载classpath根目录下的dubbo.properties，但是你同样可以使用JVM参数来指定路径：-Ddubbo.properties.file=xxx.properties。

