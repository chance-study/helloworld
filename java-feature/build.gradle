// 需要部署jar包的项目
// Gradle 3.4+ 使用java-library插件替换java插件
apply plugin: 'java-library'

// 读取的gradle.properties中的变量
group = "${group}"
version = "${version}"

//  指定编码环境:指定编译编译.java文件的jdk版本
sourceCompatibility = JavaVersion.VERSION_1_8
//  指定编译环境:确保class文件与targetCompatibility指定版本，或者更新的java虚拟机兼容
targetCompatibility = JavaVersion.VERSION_1_8

ext {
    lombok = '1.18.8'
    springBootVersion = '2.1.6.RELEASE'
}

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

// 指定上传的路径
def localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath

repositories {
    // 本地maven仓库
    mavenLocal()
    maven { url localMavenRepo }
    // 阿里的源
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
}

dependencies {

    // import a BOM
    implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")

    implementation 'org.chance:java-util:0.0.1-SNAPSHOT'
    implementation 'org.springframework.boot:spring-boot-starter'

    implementation 'org.javassist:javassist:3.20.0-GA'

    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    compileOnly 'org.projectlombok:lombok:1.18.8'
//    testAnnotationProcessor 'org.projectlombok:lombok:1.18.8'
//    testCompileOnly 'org.projectlombok:lombok:1.18.8'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

//指定编译的编码
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
}

wrapper {
    /* 使用5.6.4版本在idea中会导入项目报错，命令行构建项目没有问题 */
    gradleVersion = '5.6.4'
}
