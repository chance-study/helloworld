// 需要部署jar包的项目
// Gradle 3.4+ 使用java-library插件替换java插件
apply plugin: 'java-library'
// 使用自定义插件
//apply plugin: 'plugin.test'

// 读取的gradle.properties中的变量
group = "${group}"
version = "${version}"

//  指定编码环境:指定编译编译.java文件的jdk版本
sourceCompatibility = JavaVersion.VERSION_1_8
//  指定编译环境:确保class文件与targetCompatibility指定版本，或者更新的java虚拟机兼容
targetCompatibility = JavaVersion.VERSION_1_8


ext {
    lombok = '1.18.8'
    cglibVersion = '3.2.2'
    junitVersion = '4.11'
}

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

def localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath

logger.quiet(localMavenRepo)

repositories {
    maven { url localMavenRepo }
    // 本地maven仓库
    mavenLocal()
    // 阿里的源
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
}

dependencies {

    // lombok配置
    // idea中如果出现单元测试有问题
    // 需要设置 File | Settings | Build, Execution, Deployment | Compiler | Annotation Processors
    annotationProcessor "org.projectlombok:lombok:${lombok}"
    compileOnly "org.projectlombok:lombok:${lombok}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombok}"
    testCompileOnly "org.projectlombok:lombok:${lombok}"

    compile("cglib:cglib:${cglibVersion}")
    testCompile group: 'junit', name: 'junit', version: "${junitVersion}"
}

//指定编译的编码
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
}

wrapper {
    /* 使用5.6.4版本在idea中会导入项目报错，命令行构建项目没有问题 */
    gradleVersion = '5.6.4'
}
